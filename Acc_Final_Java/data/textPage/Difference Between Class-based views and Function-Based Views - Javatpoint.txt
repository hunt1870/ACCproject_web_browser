https://www.javatpoint.com/class-based-views-vs-function-based-views::difference between class-based views and function-based views - javatpoint ? scroll to top home python if else for loop function array string regex list set tuple dictionary programs numpy interview questions python tutorial python tutorial python features python history python applications python install python example python variables python data types python keywords python literals python operators python comments python if else python loops python for loop python while loop python break python continue python pass python strings python lists python tuples python list vs tuple python sets python dictionary python functions python built-in functions python lambda functions python files i/o python modules python exceptions python date python regex python sending email read csv file write csv file read excel file write excel file python assert python list comprehension python collection module python math module python os module python random module python statistics module python sys module python ides python arrays command line arguments python magic method python stack & queue pyspark mllib python decorator python generators web scraping using python python json python itertools python multiprocessing how to calculate distance between two points using geopy gmail api in python how to plot the google map using folium package in python grid search in python python high order function nsetools in python python program to find the nth fibonacci number python opencv object detection python simpleimputer module second largest number in python python oops python oops concepts python object class python constructors python inheritance abstraction in python python mysql environment setup database connection creating new database creating tables insert operation read operation update operation join operation performing transactions python mongodb python mongodb python sqlite python sqlite python questions how to install python in windows how to reverse a string in python how to read csv file in python how to run python program how to take input in python how to convert list to string in python how to append element in the list how to compare two lists in python how to convert int to string in python how to create a dictionary in python how to create a virtual environment in python how to declare a variable in python how to install matplotlib in python how to install opencv in python how to print in same line in python how to read json file in python how to read a text file in python how to use for loop in python is python scripting language how long does it take to learn python how to concatenate two strings in python how to connect database in python how to convert list to dictionary in python how to declare a global variable in python how to reverse a number in python what is an object in python which is the fastest implementation of python how to clear python shell how to create a dataframes in python how to develop a game in python how to install tkinter in python how to plot a graph in python how to print pattern in python how to remove an element from a list in python how to round number in python how to sort a dictionary in python strong number in python how to convert text to speech in python bubble sort in python logging in python insertion sort in python binary search in python linear search in python python vs scala queue in python stack in python heap sort in python palindrome program in python program of cumulative sum in python merge sort in python python matrix python unit testing forensics & virtualization best books to learn python best books to learn django gcd of two number in python python program to generate a random string how to one hot encode sequence data in python how to write square root in python pointer in python python 2d array python memory management python libraries for data visualization how to call a function in python git modules in python top python frameworks for gaming python audio modules wikipedia module in python python random randrange() permutation and combination in python getopt module in python merge two dictionaries in python multithreading in python 3 static in python how to get the current date in python argparse in python python tqdm module caesar cipher in python tokenizer in python how to add two lists in python shallow copy and deep copy in python atom python contains in python label encoding in python django vs. node js python frameworks how to create a vector in python using numpy pickle module of python how to convert bytes to string in python python program to find anagram how to convert list to set python vs javascript python holidays module fuzzywuzzy python library dask python dask python (part 2) mode in python menu-driven programs in python python array vs. list what is duck typing in python pep 8 in python python user groups basic commands in python f string in python how brython works how to use brython in the browser arima model in python python modulus operator matlab vs. python method resolution order in python monkey patching in python python __call__ method python heapq module python substring project ideas for python beginners python faker fizz-buzz program in python tabula python python program to print prime factor of given number python program to print pascal triangle namedtuple in python ordereddict in python t-test in python python return statement getter and setter in python enum class in python destructors in python curve fit in python converting csv to json in python underscore (_) in python set vs list in python locating and executing modules flatten list in python pair plot in python data hiding in python python program to find intersection of two lists how to create requirements.txt file in python tic-tac-toe in python python asynchronous programming - asyncio and await python main() function strftime() function in python verbose flag in python regex python ast module python requests module - http request shutil module in python python epoch to datetime python del statement looping technique in python metaprogramming with metaclasses in python precision handling in python python join list strip() function in python gradient descent algorithm prettytable in python sentiment analysis in python convert python list to numpy arrays traceback in python time clock() method in python deque in python dictionary comprehension in python python data analytics python seek() method ternary operator in python how to calculate the area of the circle using python how to write in text file using python python keyerror python super() function max() function in python fraction module in python popular python framework to build api how to check python version python %s - string formatting python seaborn library countplot in python range() vs. xrange() python wordcloud package in python convert dataframe into list anova test in python python program to find compound interest ansible in python python important tips and tricks python coroutines double underscores in python re.search() vs re.findall() in python regex how to install statsmodels in python cos in python vif in python __add__ method in python ethical hacking with python class variable vs instance perfect number in python eol in python python program to convert hexadecimal string to decimal string different methods in python for swapping two numbers without using third variable how to change plot size in matplotlib how to get the zip code in python eel in python assignment operators in python speech recognition python yield vs return in python graphene python name mangling in python python combination without itertools python comprehensions influxdb in python kafka tutorial in python augmented assignment expressions in python python (x,y) software python event-driven programming python semaphore python sorted reverse automorphic number in python sizeof in python python program for accepting the strings which contains all vowels class-based views vs function-based views how to handle cookies in django agg() function in python amicable numbers in python context manager in python create bmi calculator using python string to binary in python what is script mode in python best python libraries for machine learning python program to display calendar of given year how to open url in python broken pipe error in python code template for creating objects in python python program to calculate the best time to buy and sell stock tuple to string in python kadane's algorithm in python loggers in django weather app in django missing data conundrum: exploration and imputation techniques different methods of array rotation in python what is operator overloading in python defaultdict in python operator module in python spinner widget in the kivy library of python number plate recognition using python obfuscating a python program convert string to dictionary in python convert string to json in python dbscan algorithm in python how to write a code for printing the python exception/error hierarchy principal component analysis (pca) with python python program to find number of days between two given dates object recognition using python python vlc module set to list in python string to int in python internet of things with python python pysftp module amazing hacks of python average of list in python check installed modules in python choice() in python convert list to dataframe in python convert string to float in python decorators with parameters in python dynamic typing in python fabs in python how to remove decimal in python python closure python glob module writing a python module modules vs packages in python snmp module in python average of list in python append vs extend vs insert in python how to remove duplicates from a list in python remove multiple characters from a string in python shuffle in python floor() and ceil() functions in python sqrt(): math function of python python yfinance module difflib module in python convert the column type from string to datetime format in pandas dataframe python wxpython module random uniform python relational operators in python string to list in python chatbot in python how to convert float to int in python multiply all elements in list of python module vs function in python reverse a tuple in python tuple to dictionary in python datetime.timedelta() function of python python bio module python dash module how to select rows in pandas dataframe based on conditions typecasting in python dateutil module in python getpass module in python python wand library generate a qr code using python best python pdf library python cachetools module python cmdparser module python dash module python emoji module python nmap module python pylab module working with pdf files in python pdf handling in python manipulating pdf using python list all functions from a python module python list of dictionaries python shelve module creating interactive pdf forms using python python newspaper module how to connect wi-fi using python best python libraries used for ethical hacking windows system administration management using python indentation error in python python imaplib module python lxml module python mayavi module python os.listdir() method python modules for automation data visualization in python using bokeh library how to plot glyphs over a google map by using bokeh library in python how to plot a pie chart using bokeh library in python how to read contents of pdf using ocr in python grammar and spell checker in python converting html to pdf files using python readlines in python how to plot multiple lines on a graph using bokeh in python bokeh.plotting.figure.circle_x() function in python bokeh.plotting.figure.diamond_cross() function in python how to plot rays on a graph using bokeh in python image steganography using python inconsistent use of tabs and spaces in indentation how to plot multiple plots using bokeh in python how to make an area plot in python using bokeh python chempy module python memory-profiler module python phonenumbers module python platform module typeerror string indices must be an integer time series forecasting with prophet in python python pexpect module python optparse module int object is not iterable. python peewee library some cryptocurrency libraries for python building a blockchain using python huffman coding using python nested dictionary in python collections.userstring in python how to customize legends with matplotlib matplotlib legend in subplot morphological operations in image processing in python role of python in artificial intelligence python instagramy module python pprint module python primepy module android development using python python fbchat library artificial intelligence in cybersecurity: pitting algorithms vs algorithms understanding the recognition pattern of artificial intelligence when and how to leverage lambda architecture in big data why should we learn python for data science how to change the "legend" position in matplotlib how to check if element exists in list in python how to check spellings of given words using enchant in python python program to count the number of matching characters in a pair of string ping pong game using turtle in python python function to display calendar python program for calculating the sum of squares of first n natural numbers python program for how to check if a given number is fibonacci number or not randint() function in python visualize tiff file using matplotlib and gdal in python rarfile module in python stemming words using python python program for word guessing game blockchain in healthcare: innovations & opportunities snake game in python using turtle module how to find armstrong numbers between two given integers celery tutorial using python rsme - root mean square error in python building a twitter bot using python python progressbar module python pronouncing module python pyautogui module python pyperclip module how to generate uuid in python python top 10 libraries to learn in 2022 reading netcdf data using python the reprlib module in python how to take multiple input from user in python python zlib library python queue module python yaml parser effective root searching algorithms in python python bz2 module python ipaddress module python pylint module how to process xml in python bisect algorithm functions in python creating and updating powerpoint presentation using python how to change the size of figure drawn with matplotlib keyboard module in python python pyfiglet module creating an mcq quiz game in python statistic with python what is gil in python basic python for java developers how to download youtube videos using python scripts traffic flow simulation in python how to merge and sort two lists in python metacharacters in python write the python program to print all possible combination of integers modulo string formatting in python counters in python python pyautogui library how to draw the mandelbrot set in python python dbm module webcam motion detector in python graphql implementation in django how to implement protobuf in python pyqt library in python how to prettify data structures with pretty print in python encrypt a password in python using bcrypt pyramid framework in python building a telegram bot using python web2py framework in python python os.chdir() method balancing parentheses in python how to provide multiple constructors in python classes profiling the python code python tkinter (gui) python tkinter tkinter button tkinter canvas tkinter checkbutton tkinter entry tkinter frame tkinter label tkinter listbox tkinter menubutton tkinter menu tkinter message tkinter radiobutton tkinter scale tkinter scrollbar tkinter text tkinter toplevel tkinter spinbox tkinter panedwindow tkinter labelframe tkinter messagebox python web blocker introduction building python script script deployment on linux script deployment on windows python mcq python mcq python mcq part 2 related tutorials numpy tutorial django tutorial flask tutorial pandas tutorial pytorch tutorial pygame tutorial matplotlib tutorial opencv tutorial openpyxl tutorial python cgi python design pattern python programs python programs next ? ? prev difference between class-based views and function-based views django is one of a most popular framework for the web development. the reason of its popularity is that it provides the many built-in features that save lots of time of a developer. if you are beginners then it will take some time to understand the flow to the project. but once you get some experience then you can easily understand the execution of features. django is based on the mvt pattern means model view template. we mainly use the two-types of view - function-based views and class based views. if you are beginners, you must be aware from the function based views (fbv). when django was introduced, it only supported the function-based view but later django added the concept of the class-based views. the class-based views reduce the redundancy of the code. it also supports the dry concept of the django. in this tutorial, we will learn in-depth how the fbv and cbc are different from each other. we can perform the same task using the function-based views and class-based views. but both approaches are different. requirements of django views below are the points that we should remember about the django views. the first positional argument of the view should be it should return the httpresponse object, or it should raise an exception. django views are callable. we can use both methods either function-based or class-based. while using cbvs we inherit the method as_view() that uses the dispatch() method to call the method appropriate depending on the http requests. let's have a detailed explanation of way of creating views. function-based views function-based views are simple to use and beginners can easy understand them. it helps to understand the core concept of the django fundamentals. fbv provides the advantages to understand the django concept from scratch. django project usually have the crud operations, so we need to implement same code for the multiple times unnecessarily and that's why the django class-based views come into the scenario. the class based-views are created to solving the code redundancy problems. let's understand the following pros and cons of the fbv. advantages of function based views the advantages of fbv are given below. easy to implement, read and understand explicit code flow decorator can be implemented easily good for one-off or specialized functionality helps to understand the core concept of the django. disadvantages of function based views the cons of fbv are given below. code redundancy is the biggest concern of fbv. condition branching will be used handle http request. hard to extend the code. let's understand the following implementation of fbv. code 
def  create_view(request, pk):
  	template_name = 'form.html'
  	form_class = myform

  	form = form_class

  	if request.method == 'post':
    form = form_class(request.post)
    if form.is_valid():
      form.save()
      return httpresponseredirect(reverse('list-view'))

  	return render(request, template_name, {'form': form})
 class based views class-based views are advance way to create views in python. it is implemented in the project as python objects instead of functions. it is not a substitute of fbv, but they provide advantages over the function based views. it reduces the code repetition and takes cares of the basic operations such as deleting and adding item. it is slightly hard to get the concept of class-based views for beginners. you should go through the documentation, and you will have study properly. if you have a clear idea about the function based views, you can move to the class based views. let's understand the following pros and cons of the views in python. advantages of class based views below are the advantages of the class based views. one of the biggest advantages of cbv is inheritance. cbv allows us to inherit another class and can be modified for the different use cases. it supports the dry principle. it prevents the repetition of the code. code reusability is possible in the class based views. it comes with the built-in generic class-based views. the class based views provides the proper code structuring. we can use the different class instance method (instead of conditional branching statement inside function-based-views) to generate the http requests. disadvantages of class based views below are the disadvantages of the class based views. hard to understand the complex to implement. implicit code flow. extra import or method override required in view decorators. let's see the implementation of the class based view. 
class mycreateview(view):
  	template_name = 'form.html'
  	form_class = myform
  
  	def get(self, request, *args, **kwargs):
   		form = self.form_class
    		return render(request, template_name, {'form': form})
  
 	 def post(self, request, *args, **kwargs):
    		form = self.form_class(request.post)
   		 if form.is_valid():
      			form.save()
      		return httpresonseredirect(reverse('list-view'))
    		else:
      	return render(request, self.template_name, {'form': form})
 we call the as_view() method to serve the request to the user. the as_view() method calls the dispatch() method to determine which class method needs to executed, depending on the http request. we can implement it in following way. 
urlpatterns = [
    url(new/', mycreateview.as_view(), name='original-create-view'),
    url(new_two/', mycreateview.as_view(), name='modified-create-view')
    ]
 when we use the django generic class-based views, we can over-write the helper method like get_form_class and get_template_names. we can also add some custom logic at these points instead of just overriding the class attributes. modelformmixin is one of the best examples. the form_valid method is overridden with the updated value stored in self.object form_valid method is overridden. django generic class-based view with the help of generic class based view, we can perform some important task such as creating a new object, list views, pagination, form handling, archive views, delete view, etc. we can implement this by importing the django.views.generic. generic class-based views are excellent way to perform some essential tasks. it speeds up the development process. django provides a set of mixins, and generic class-based views. with the help of these tools we can solve the most common tasks in web development. it saves us to writing same code again and again. in the below example, we can modify mycreateview to inherit from django.views.generic.createview. 
from django.views.generic import createview
class firstcreateview(createview):
	model = mymodel
	form_class = myform
 as we can observe that, it takes very less code in comparison of previous views. the django.views.generic.createview comes with the lots of built-in functionality and shortcuts. let's discuss few more details. by default template should reside in /<modelname>/<modelname>_form.html. we can modify it by setting the class attributes template_name and template_name_sufix. in the createview class, we need to specify the model name and form_class_attributes. we also need to specify the success_url that will redirect to that mentioned page after successful form submission. it can be done using get_absoute_url(). we can specify the fields' class attributes on the view. below is the example of form fields. 
from django import forms
from . models import mymodel
class mymodelform(forms.modelform):
class meta:
	model = mymodel
	fields = ['name', 'description']
 conclusion this is a hot debate among the developers that which views are best to use class-based or function-based views? we have discussed the use, cons, and pros of both types of the views. it totally depends the project requirement and what you are comfortable for. in some cases, class-based view performs well and in some case function based is better. next topichow to handle cookies in django ? prev next ? for videos join our youtube channel: join now feedback send your feedback to [email protected] help others, please share learn latest tutorials splunk spss swagger transact-sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular 7 blockchain git machine learning devops b.tech / mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c++ java .net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services. mail us on [email protected], to get more information about given services. website designing website development java development php development wordpress graphic designing logo digital marketing on page and off page seo ppc content development corporate training classroom and online training data entry training for college campus javatpoint offers college campus training on core java, advance java, .net, android, hadoop, php, web technology and python. please mail your requirement at [email protected] duration: 1 week to 2 week like/subscribe us for latest updates or newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c++ tutoriallearn c# tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint.comhindi100.comlyricsia.comquoteperson.comjobandplacement.com our services website development android development website designing digital marketing summer training industrial training college campus training contact address: g-13, 2nd floor, sec-3 noida, up, 201301, india contact no: 0120-4256464, 9990449935contact us subscribe us privacy policysitemap about me ? copyright 2011-2021 www.javatpoint.com. all rights reserved. developed by javatpoint.
