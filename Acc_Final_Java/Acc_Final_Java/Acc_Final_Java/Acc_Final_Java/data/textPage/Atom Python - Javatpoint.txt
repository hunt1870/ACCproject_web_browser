https://www.javatpoint.com/atom-python::atom python - javatpoint ? scroll to top home python if else for loop function array string regex list set tuple dictionary programs numpy interview questions python tutorial python tutorial python features python history python applications python install python example python variables python data types python keywords python literals python operators python comments python if else python loops python for loop python while loop python break python continue python pass python strings python lists python tuples python list vs tuple python sets python dictionary python functions python built-in functions python lambda functions python files i/o python modules python exceptions python date python regex python sending email read csv file write csv file read excel file write excel file python assert python list comprehension python collection module python math module python os module python random module python statistics module python sys module python ides python arrays command line arguments python magic method python stack & queue pyspark mllib python decorator python generators web scraping using python python json python itertools python multiprocessing how to calculate distance between two points using geopy gmail api in python how to plot the google map using folium package in python grid search in python python high order function nsetools in python python program to find the nth fibonacci number python opencv object detection python simpleimputer module second largest number in python python oops python oops concepts python object class python constructors python inheritance abstraction in python python mysql environment setup database connection creating new database creating tables insert operation read operation update operation join operation performing transactions python mongodb python mongodb python sqlite python sqlite python questions how to install python in windows how to reverse a string in python how to read csv file in python how to run python program how to take input in python how to convert list to string in python how to append element in the list how to compare two lists in python how to convert int to string in python how to create a dictionary in python how to create a virtual environment in python how to declare a variable in python how to install matplotlib in python how to install opencv in python how to print in same line in python how to read json file in python how to read a text file in python how to use for loop in python is python scripting language how long does it take to learn python how to concatenate two strings in python how to connect database in python how to convert list to dictionary in python how to declare a global variable in python how to reverse a number in python what is an object in python which is the fastest implementation of python how to clear python shell how to create a dataframes in python how to develop a game in python how to install tkinter in python how to plot a graph in python how to print pattern in python how to remove an element from a list in python how to round number in python how to sort a dictionary in python strong number in python how to convert text to speech in python bubble sort in python logging in python insertion sort in python binary search in python linear search in python python vs scala queue in python stack in python heap sort in python palindrome program in python program of cumulative sum in python merge sort in python python matrix python unit testing forensics & virtualization best books to learn python best books to learn django gcd of two number in python python program to generate a random string how to one hot encode sequence data in python how to write square root in python pointer in python python 2d array python memory management python libraries for data visualization how to call a function in python git modules in python top python frameworks for gaming python audio modules wikipedia module in python python random randrange() permutation and combination in python getopt module in python merge two dictionaries in python multithreading in python 3 static in python how to get the current date in python argparse in python python tqdm module caesar cipher in python tokenizer in python how to add two lists in python shallow copy and deep copy in python atom python contains in python label encoding in python django vs. node js python frameworks how to create a vector in python using numpy pickle module of python how to convert bytes to string in python python program to find anagram how to convert list to set python vs javascript python holidays module fuzzywuzzy python library dask python dask python (part 2) mode in python menu-driven programs in python python array vs. list what is duck typing in python pep 8 in python python user groups basic commands in python f string in python how brython works how to use brython in the browser arima model in python python modulus operator matlab vs. python method resolution order in python monkey patching in python python __call__ method python heapq module python substring project ideas for python beginners python faker fizz-buzz program in python tabula python python program to print prime factor of given number python program to print pascal triangle namedtuple in python ordereddict in python t-test in python python return statement getter and setter in python enum class in python destructors in python curve fit in python converting csv to json in python underscore (_) in python set vs list in python locating and executing modules flatten list in python pair plot in python data hiding in python python program to find intersection of two lists how to create requirements.txt file in python tic-tac-toe in python python asynchronous programming - asyncio and await python main() function strftime() function in python verbose flag in python regex python ast module python requests module - http request shutil module in python python epoch to datetime python del statement looping technique in python metaprogramming with metaclasses in python precision handling in python python join list strip() function in python gradient descent algorithm prettytable in python sentiment analysis in python convert python list to numpy arrays traceback in python time clock() method in python deque in python dictionary comprehension in python python data analytics python seek() method ternary operator in python how to calculate the area of the circle using python how to write in text file using python python keyerror python super() function max() function in python fraction module in python popular python framework to build api how to check python version python %s - string formatting python seaborn library countplot in python range() vs. xrange() python wordcloud package in python convert dataframe into list anova test in python python program to find compound interest ansible in python python important tips and tricks python coroutines double underscores in python re.search() vs re.findall() in python regex how to install statsmodels in python cos in python vif in python __add__ method in python ethical hacking with python class variable vs instance perfect number in python eol in python python program to convert hexadecimal string to decimal string different methods in python for swapping two numbers without using third variable how to change plot size in matplotlib how to get the zip code in python eel in python assignment operators in python speech recognition python yield vs return in python graphene python name mangling in python python combination without itertools python comprehensions influxdb in python kafka tutorial in python augmented assignment expressions in python python (x,y) software python event-driven programming python semaphore python sorted reverse automorphic number in python sizeof in python python program for accepting the strings which contains all vowels class-based views vs function-based views how to handle cookies in django agg() function in python amicable numbers in python context manager in python create bmi calculator using python string to binary in python what is script mode in python best python libraries for machine learning python program to display calendar of given year how to open url in python broken pipe error in python code template for creating objects in python python program to calculate the best time to buy and sell stock tuple to string in python kadane's algorithm in python loggers in django weather app in django missing data conundrum: exploration and imputation techniques different methods of array rotation in python what is operator overloading in python defaultdict in python operator module in python spinner widget in the kivy library of python number plate recognition using python obfuscating a python program convert string to dictionary in python convert string to json in python dbscan algorithm in python how to write a code for printing the python exception/error hierarchy principal component analysis (pca) with python python program to find number of days between two given dates object recognition using python python vlc module set to list in python string to int in python internet of things with python python pysftp module amazing hacks of python average of list in python check installed modules in python choice() in python convert list to dataframe in python convert string to float in python decorators with parameters in python dynamic typing in python fabs in python how to remove decimal in python python closure python glob module writing a python module modules vs packages in python snmp module in python average of list in python append vs extend vs insert in python how to remove duplicates from a list in python remove multiple characters from a string in python shuffle in python floor() and ceil() functions in python sqrt(): math function of python python yfinance module difflib module in python convert the column type from string to datetime format in pandas dataframe python wxpython module random uniform python relational operators in python string to list in python chatbot in python how to convert float to int in python multiply all elements in list of python module vs function in python reverse a tuple in python tuple to dictionary in python datetime.timedelta() function of python python bio module python dash module how to select rows in pandas dataframe based on conditions typecasting in python dateutil module in python getpass module in python python wand library generate a qr code using python best python pdf library python cachetools module python cmdparser module python dash module python emoji module python nmap module python pylab module working with pdf files in python pdf handling in python manipulating pdf using python list all functions from a python module python list of dictionaries python shelve module creating interactive pdf forms using python python newspaper module how to connect wi-fi using python best python libraries used for ethical hacking windows system administration management using python indentation error in python python imaplib module python lxml module python mayavi module python os.listdir() method python modules for automation data visualization in python using bokeh library how to plot glyphs over a google map by using bokeh library in python how to plot a pie chart using bokeh library in python how to read contents of pdf using ocr in python grammar and spell checker in python converting html to pdf files using python readlines in python how to plot multiple lines on a graph using bokeh in python bokeh.plotting.figure.circle_x() function in python bokeh.plotting.figure.diamond_cross() function in python how to plot rays on a graph using bokeh in python image steganography using python inconsistent use of tabs and spaces in indentation how to plot multiple plots using bokeh in python how to make an area plot in python using bokeh python chempy module python memory-profiler module python phonenumbers module python platform module typeerror string indices must be an integer time series forecasting with prophet in python python pexpect module python optparse module int object is not iterable. python peewee library some cryptocurrency libraries for python building a blockchain using python huffman coding using python nested dictionary in python collections.userstring in python how to customize legends with matplotlib matplotlib legend in subplot morphological operations in image processing in python role of python in artificial intelligence python instagramy module python pprint module python primepy module android development using python python fbchat library artificial intelligence in cybersecurity: pitting algorithms vs algorithms understanding the recognition pattern of artificial intelligence when and how to leverage lambda architecture in big data why should we learn python for data science how to change the "legend" position in matplotlib how to check if element exists in list in python how to check spellings of given words using enchant in python python program to count the number of matching characters in a pair of string ping pong game using turtle in python python function to display calendar python program for calculating the sum of squares of first n natural numbers python program for how to check if a given number is fibonacci number or not randint() function in python visualize tiff file using matplotlib and gdal in python rarfile module in python stemming words using python python program for word guessing game blockchain in healthcare: innovations & opportunities snake game in python using turtle module how to find armstrong numbers between two given integers celery tutorial using python rsme - root mean square error in python building a twitter bot using python python progressbar module python pronouncing module python pyautogui module python pyperclip module how to generate uuid in python python top 10 libraries to learn in 2022 reading netcdf data using python the reprlib module in python how to take multiple input from user in python python zlib library python queue module python yaml parser effective root searching algorithms in python python bz2 module python ipaddress module python pylint module how to process xml in python bisect algorithm functions in python creating and updating powerpoint presentation using python how to change the size of figure drawn with matplotlib keyboard module in python python pyfiglet module creating an mcq quiz game in python statistic with python what is gil in python basic python for java developers how to download youtube videos using python scripts traffic flow simulation in python how to merge and sort two lists in python metacharacters in python write the python program to print all possible combination of integers modulo string formatting in python counters in python python pyautogui library how to draw the mandelbrot set in python python dbm module webcam motion detector in python graphql implementation in django how to implement protobuf in python pyqt library in python how to prettify data structures with pretty print in python encrypt a password in python using bcrypt pyramid framework in python building a telegram bot using python web2py framework in python python os.chdir() method balancing parentheses in python how to provide multiple constructors in python classes profiling the python code python tkinter (gui) python tkinter tkinter button tkinter canvas tkinter checkbutton tkinter entry tkinter frame tkinter label tkinter listbox tkinter menubutton tkinter menu tkinter message tkinter radiobutton tkinter scale tkinter scrollbar tkinter text tkinter toplevel tkinter spinbox tkinter panedwindow tkinter labelframe tkinter messagebox python web blocker introduction building python script script deployment on linux script deployment on windows python mcq python mcq python mcq part 2 related tutorials numpy tutorial django tutorial flask tutorial pandas tutorial pytorch tutorial pygame tutorial matplotlib tutorial opencv tutorial openpyxl tutorial python cgi python design pattern python programs python programs next ? ? prev atom python an introduction to atom it is a universal fact that time does not pause for anyone, and we consistently have to upgrade tools in order to keep up with this immeasurably rapid era. software development is among the chief professions that need the most resourceful environments for the programmers to write the code and efficiently produce software. thus, it comes to the requirement of an effective text editor and ide (integrated development environment). with respect to python programming language, atom serves best in terms of ide. atom is a free and open-source integrated development environment specially designed for python developers in their endeavor. but before we get deeper into the concept, let us have a quick look at the topics we will be covering in the tutorial: understanding the need for atom python understanding atom text editor downloading and installing atom python code execution in atom python atom python theming atom python experimenting python specific configurations let us begin with understanding the actual importance of python atom ide. understanding the need for atom python the most fundamental method in order to create and execute a python program is by creating an empty file using a .py extension that stands for python. after that, we have to use command line shell or terminal in order to the point that file using the following syntax: 
$ python file_name.py
 on the other hand, we can utilize idle integrated development and learning environment of python), a by default application for executing python's code. however, in order to get something productive, these two primary options would not appear like a good choice. we will require something more productive and reliable. thus, when the atom python ide comes in handy. atom does not contain any special features in the traditional sense; instead, it builds packages that store to its hackable core. these packages include features such as code lines, auto-complete, and code highlights. now, let's head up to understanding the remarkable atom text editor. understanding atom text editor atom is a free, open-source, and multi-platform text editor or ide which supports nodejs developed packages and embedded git control. most of the extending packages are freely available and developed by open-source communities. atom ide is based on electron framework (previously called atom shell). the electron framework allows the developers to use the desktop application on multiple platforms such as linux, macos, and windows, with the help of nodejs and chromium. atom ide is written in less and coffeescript, developed and maintained by github. atom text editors is also known as hackable text editor for the twenty-first century by its developers and is fully customizable in html, javascript, and css. now, let us see how to download and install atom text editor. downloading and installing atom python text editor we can download atom python text editor from the official website: https://atom.io/. it will automatically detect the current operating system configuration and display the corresponding setup file for download. in order to download the setup file, click on download. once the download process is completed, open the setup file in order to install the application in the system. since the installation process is automatic, there is no need for any manual. atom will open automatically in the default directory once it gets installed successfully, and an application shortcut will also be created in the start menu. now, we have to install the required plugins and packages in order to execute python code. let us now understand the configuration of atom python to access it from the directory of the user's preference in a standard method. atom also provides features such as theme or package installation with the help of a welcome guide. we are now closing the welcome guide and unchecking the 'show welcome guide when opening atom' option. as a result, the welcome guide will not appear the next time when we launch the atom application. we can now go to the directory, right-click on the folder or file, and select the "open with atom" option. if the option is not available in the context menu, we can launch it from the programs. all we have to do is to go to the file menu in atom. go to settings. we can also use the shortcut key: ctrl + comma (ctrl+,) in order to open settings in atom. in settings, we have to click on the system tab and check the options as follows: show in file context menus show in folder context menus after this, the context menu will start displaying the 'open with atom' option. now, we can open the selected file or folder directly in atom. when we open the atom application, we can see the tree view at the left. however, if the tree view is not visible, we can go to view in the menu bar and click on toggle tree view. we can also use the shortcut: ctrl + k ctrl + b. this tree view contains the files present in the linked folder, from which we can double click on any python file to see its content. code execution in atom python generally, we use the command prompt or terminal to execute python programs. however, atom provides a plugin known as platformio-ide-terminal in order to execute the python code. we can set up this plugin by navigating to the file in the menu bar. go to settings. click on install tab. now, in the search bar, search and install the platformio-ide-terminal plugin. we can use the above method in order to install other packages, plugins as well as themes. once the plugin is successfully installed, a terminal will be integrated within the atom text editor. we can toggle this terminal using the + icon available in the bottom-left corner of the editor. splitting the editor we can open multiple files in atom and split the window by navigating to view in the menu bar. go to panes and select the split right option in order to send the present file to the right half of the window. this will help the users to enhance productivity while working with more than one file. atom python theming atom provides two types of themes, called, syntax themes and ui themes. the syntax themes are used to determine the color of the code and highlight the details in the syntax. in contrast, the ui themes are used to change the style of dropdowns, buttons, and a lot more. we can check all the installed themes by navigating the settings present in the file menu and clicking on the themes tab. the theme tab will display the relevant output. we can also download a variety of new themes available in the market by clicking on the + install tab in the settings and searching for the desired theme. formatting we can also change the font's default settings by again navigating to the settings and clicking on the editor tab. in the following tab, we can find many options related to the editor style, which includes the font size, font style, and a lot more. we can change the font by using font family in order to style it as per our choice. atom python experimenting there are various things that we can also experiment with using the options as follows: line-height: line-height is generally defined as the spacing between two lines. we can also change the line-height by navigating to the editor tab and changing it as per the requirement. scroll past end: generally, we can only scroll through the code until its last line, which is also referred to as the bottom of the screen. we cannot usually scroll beyond this limit. however, if we enable the scroll past end package, we can view the bottom line at the screen's top. this package provides blank space at the bottom for the users to comfortably work with their codes. show indent guide: indent guide is used to display the vertical lines, which denotes that the indentations should appear. we can enable the show indent guide from the editor tab in the settings. there are various other options we can experiment with. but for now, let us head onto understanding some python-specified configurations. python particular configurations in order to boost the productivity of python, some of the extremely beneficial plugins are as follows: script: the script package is designed to display a document related to all the details of other packages like shortcuts, commands, and many more. we can always change these default shortcuts if it feels uncomfortable by navigating to the view code tab, which stores the keymaps folder. then, we have to open the script.cson file and update it as per preferences. for instance, we have changed the shortcut to ctrl + r. once the updating processing is done, close all the windows and restart atom ide. after the restart, we can use the python script using the customized shortcut, and an output box is also appeared at the bottom. but we can also customize this output box as shown below: go to the settings in the file menu and click on the themes tab. a link to customize the stylesheet is visible towards the top. this link will navigate us to the stylesheet. once the stylesheet is opened, paste the following snippet of code to increase the size of the font of the script console. 
.script-view .line{
font-size: 20px;
}
 atom-file-icons: the atom-file-icons package is used to insert icons leading the files in the tree view as shown below: before installing the atom-file-icons package after install the atom-file-icons package autocomplete-python: the autocomplete-python package displays the suggestions window in respect to what can give the impression when we reach a specific point while writing a code. flake: flake acts as a python linter used to find the errors within the script and highlight them all. we can enable the flake package by installing flake8 using the following command in the command shell or terminal: 
$ pip install flake8
 once the installation is completed, we will view a little icon at the bottom left corner of atom ide. this icon will display the error list that was encountered during the writing. python-autopep8: the python-autopep8 package is used for code formatting. we can enable it from the autopep8 plugin settings by checking the format on the save option. now, let us understand the python code execution in atom ide. how to execute python code in atom ide? let us understand the python code execution in atom ide by writing a simple code for abstract class. example: file: inter.py 
import abc

class marine_animals (abc.abc):
    @abc.abstractmethod
    def breathe( self ):
        pass

class fish ( marine_animals ) :
    def breathe( self ):
        print("fishes breathe with their gills.")

class aerial_animals (abc.abc):
    @abc.abstractmethod
    def breathe( self ):
        pass

class bird ( aerial_animals ) :
    def breathe( self ):
        print("birds breathe through their mouth or their nostrils.")

goldie = fish()
birdy = bird()
print( isinstance(goldie, marine_animals))
print( isinstance(goldie, aerial_animals))
print( isinstance(birdy, marine_animals))
print( isinstance(birdy, aerial_animals))
 once we are done with writing the code, it will look like the following image: now let us move onto the code execution using the terminal we have installed earlier. to use the terminal, click on the + icon located at the bottom left. now, type the following command to run the program: output: $ python inter.py
true
false
false
true
 the same can be viewed in the following image: now, let us understand the code. explanation: in the above example, we have defined two abstract classes: marine_animals and aerial_animals, respectively. we have also defined an abstract method, namely breathe(), for these classes. we have also defined two child classes, namely fish and bird, that inherit the above abstract classes' attributes and methods. finally, we have instantiated both the classes using the objects goldie and birdy, respectively, and use the isinstance() function to check if the object is an instance of the class. next topiccontains in python ? prev next ? for videos join our youtube channel: join now feedback send your feedback to [email protected] help others, please share learn latest tutorials splunk spss swagger transact-sql tumblr reactjs regex reinforcement learning r programming rxjs react native python design patterns python pillow python turtle keras preparation aptitude reasoning verbal ability interview questions company questions trending technologies artificial intelligence aws selenium cloud computing hadoop reactjs data science angular 7 blockchain git machine learning devops b.tech / mca dbms data structures daa operating system computer network compiler design computer organization discrete mathematics ethical hacking computer graphics software engineering web technology cyber security automata c programming c++ java .net python programs control system data mining data warehouse javatpoint services javatpoint offers too many high quality services. mail us on [email protected], to get more information about given services. website designing website development java development php development wordpress graphic designing logo digital marketing on page and off page seo ppc content development corporate training classroom and online training data entry training for college campus javatpoint offers college campus training on core java, advance java, .net, android, hadoop, php, web technology and python. please mail your requirement at [email protected] duration: 1 week to 2 week like/subscribe us for latest updates or newsletter learn tutorialslearn javalearn data structureslearn c programminglearn c++ tutoriallearn c# tutoriallearn php tutoriallearn html tutoriallearn javascript tutoriallearn jquery tutoriallearn spring tutorial our websitesjavatpoint.comhindi100.comlyricsia.comquoteperson.comjobandplacement.com our services website development android development website designing digital marketing summer training industrial training college campus training contact address: g-13, 2nd floor, sec-3 noida, up, 201301, india contact no: 0120-4256464, 9990449935contact us subscribe us privacy policysitemap about me ? copyright 2011-2021 www.javatpoint.com. all rights reserved. developed by javatpoint.
